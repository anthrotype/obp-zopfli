env:
  global:
    # directory containing the project source
    - REPO_DIR=.
    # pip dependencies to _build_ project
    - BUILD_DEPENDS=
    # pip dependencies to _test_ project
    - TEST_DEPENDS="tox"
    - PLAT=x86_64
    - UNICODE_WIDTH=32

language: python
# The travis Python version is unrelated to the version we build and test
# with.  This is set with the MB_PYTHON_VERSION variable.
python: 3.5
sudo: required
dist: trusty
services: docker

matrix:
  exclude:
    # Exclude the default Python 3.5 build
    - python: 3.5
  include:
    # PyPy is not supported yet by multibuild and the manylinux1 container,
    # thus we install PyPy ourselves and run the tests, but don't upload any
    # wheel to Github/PyPy, as they won't be portable across distros.
    # We use pyenv to install the current pypy, as Travis version is outdated
    - os: linux
      env:
        - PYPY_VERSION=5.6.0
        - TOXENV=pypy
        - SKIP_DEPLOY=true
    - os: linux
      env: MB_PYTHON_VERSION=2.7
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - BUILD_SDIST=true
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=i686
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=2.7
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.5
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.6

before_install:
  - >-
    if [ -n "$MB_PYTHON_VERSION" ]; then
        source multibuild/common_utils.sh;
        source multibuild/travis_steps.sh;
        before_install;
    elif [ -n "$PYPY_VERSION" ]; then
        git clone https://github.com/yyuu/pyenv.git ~/.pyenv;
        export PYENV_ROOT="$HOME/.pyenv";
        export PATH="$PYENV_ROOT/bin:$PATH";
        eval "$(pyenv init -)";
        pyenv install pypy-${PYPY_VERSION};
        pyenv global pypy-${PYPY_VERSION};
        pyenv rehash;
        pip install $TEST_DEPENDS;
    fi

install:
  - if [ -n "$MB_PYTHON_VERSION" ]; then build_wheel $REPO_DIR $PLAT; fi

script:
  - >-
    if [ -n "$MB_PYTHON_VERSION" ]; then
        install_run $PLAT;
    else
        tox;
    fi

after_success:
  # if tagged commit, create the source distribution for the deploy stage, and
  # copy the wheel to dist/ where we can upload both in one go to PyPI/Github
  - >-
    if [ -n "$TRAVIS_TAG" ] && [ "$SKIP_DEPLOY" != true ]; then
        if [ "$BUILD_SDIST" == true ]; then
            pip install --upgrade setuptools;
            python setup.py sdist;
        fi;
        mkdir -p dist;
        cp wheelhouse/*.whl dist;
    fi

# deploy:
#   # Deploy on tags to GitHub Releases
#   - provider: releases
#     api_key:
#       secure: DjEjgnbxchBCUB2DFH0jtSee7v3vCmWXCkQrkYyULAlZkEKcLDRVRZoDg1BW/q2aCuAz8vnG4lgVbOwWhT8JTSVtbuVnT2W2chwSmBAyhtC3QVxdMQdIEVjJvU3Ci6QnBQiP9ibi4vjua8ORjWD/CoNm5v/ME0NJjeidDhPJdAg3HAvj6JnocI5alL4LTrmoDRL9ghuAw23uHFcGZ89QOF6cEs5vlD4EJ+zIMssyR3kQsY6bi96tQuo4vpfo+Gd+ygT5k5RrWkuj5Fm7A5yq0wkgxsLdbuwlFtnFl/yahG8c2bWy5iwkEcvPlsaHs9+nwR+hFzqeGDUPyNPHYTPNVyirDk+MNoXYoC08VkzUK3HNC3N/MmZxebG/aEqK0CfJopVzHdlgMQ7Tm00fYzrhazlijrRmttU5oOnuF1glUnScaR0y7zsv3oNg/4z043BbAVclcQvvVu8Fw9aNIjusYHo1MLBN+nHbZBjkIUvSlYoj7E/2kDPsIFt8E8On15a/SIrmXj1DfURnHOYeBhl059h+TTpo2aq4KAn5DnpAcwZHcxgIKdeIriCC6GCYhq3yuGNzusuCxOeEAKU8XijgST2BB2Z93OiDAPNhTJ4SjzvRYTvS15wBGviVhWmbElZlqTZFPaOP8kI+JPnYaNvzdIKBaj5EG1z3ym8XjpTkqLc=
#     file_glob: true
#     file: "dist/*"
#     skip_cleanup: true
#     on:
#       repo: anthrotype/obp-zopfli
#       tags: true
#       condition: $SKIP_DEPLOY != true
#   # Deploy on tags to PyPI
#   - provider: pypi
#     server: https://upload.pypi.org/legacy/
#     on:
#       repo: anthrotype/obp-zopfli
#       tags: true
#       condition: $SKIP_DEPLOY != true
#     user: anthrotype
#     password:
#       secure: O7n0blUsuJRHOVMRnIntntwQfpwvrUdDJOYU6MThNAP7VmoZCClHcrRa72zYy/rloEfvLoftdqRgWMvany5rETfb5l//zlKlRxYUnE8UMrRm/b6Q10OWH1PDuLDZ7o1Q97gFaECfoW8s1fygKF41RxiwBlFM9JdWgIaT3S5PNKO16sj50oFs6/Xd4MOeYhVPwj3SBL7Rn0cs2cLXvcUfMiWJ0czl90p9vQpjr5y9OzG87/kSr5Xo7CxoSJg0OHoQNPoGAAuSE6e/Lsg9fVSmqmYcYS/YsCuWb/3UiWrW34JPh5IasK8N0FBJ18j4KPDI5hywKiF8aqSFcvC0QvpBcnx/gSQtOObmnayHnyaJhfnJUcBB2kF0FSO+x4dZqiqtoy08IuIJMiYAgxFtVXXiIGFS4esFaJLQq4n4KhpXXEVn4LWpiBTt5oAvinygttMO/BlirPaaSmgYOf0tZwzQZiv79i6Q+ag6Y5/njYLfZKi23I9YC8qtZUpBoaSpgGeUki1KAChM7EaU/sFQEAEdGSxCIjPzZtE32FokIugZe/q/ov5hINLpy9W0Cb9M7Ma7EqAFFR8VabY6cYupJgDsSwcIgNQZD2CgXe2J83XmNMvkbULuRtGktiXNtNp6eL1OTYLvb/fS+Dp9Nw0VNuBNJFcbHCVN1h0+yfA9mAFTYSI=
#     skip_cleanup: true
#     distributions: pass
