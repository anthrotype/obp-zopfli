environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C %APPVEYOR_BUILD_FOLDER%\\multibuild\\ci\\appveyor\\windows_sdk.cmd"
    # PyPI username and encrypted password
    # PYPI_USER: "anthrotype"
    # PYPI_PSWD:
    #   secure: 3MYRWT1R2pwRunaCYHAqlQ==

  matrix:

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "32"
      TOXENV: "py27-whl"
      TOXPYTHON: "C:\\Python27\\python.exe"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"
      TOXENV: "py27-whl"
      TOXPYTHON: "C:\\Python27-x64\\python.exe"

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "32"
      TOXENV: "py35-whl"
      TOXPYTHON: "C:\\Python35\\python.exe"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "64"
      TOXENV: "py35-whl"
      TOXPYTHON: "C:\\Python35-x64\\python.exe"

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "32"
      TOXENV: "py36-whl"
      TOXPYTHON: "C:\\Python36\\python.exe"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"
      TOXENV: "py36-whl"
      TOXPYTHON: "C:\\Python36-x64\\python.exe"

matrix:
  fast_finish: true

install:
  # Fetch submodules
  - git submodule update --init --recursive

  # Prepend Python to the PATH of this build
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade pip and setuptools
  - "python -m pip install --disable-pip-version-check --upgrade pip setuptools"

  # Install test requirements
  - "python -m pip install tox"

build: false

test_script:
  # run the project tests
  - "%CMD_IN_ENV% tox"

on_failure:
  # print environment variables
  - ps: dir "env:"
  # print content of tox log files
  - ps: get-content .tox\*\log\*

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report
  - path: dist\*.whl

# # Deploy wheels on tags to PyPI
# on_success:
#   - ps: >-
#       if($env:APPVEYOR_REPO_TAG -eq 'true') {
#         Write-Output ("Deploying " + $env:APPVEYOR_REPO_TAG_NAME + " to PyPI...")
#         pip install --upgrade twine
#         twine upload -u $env:PYPI_USER -p $env:PYPI_PSWD .tox\dist\*.whl
#       } else {
#         Write-Output "Not deploying as this is not a tagged commit"
#       }

deploy:
  # Deploy wheels on tags to GitHub Releases
  - provider: GitHub
    auth_token:
      secure: hVN+7ELctd1ksqObYk2xfg+SXD/BSrW8CE8TKhxBM6qha8beeHkRUMs5O+eqEhM4
    draft: false
    prerelease: false
    on:
      appveyor_repo_tag: true
